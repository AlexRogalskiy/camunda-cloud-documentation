(window.webpackJsonp=window.webpackJsonp||[]).push([[276],{345:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return o})),n.d(t,"Tag",(function(){return b})),n.d(t,"default",(function(){return p}));var a=n(3),r=n(7),i=(n(0),n(662)),c={id:"task",title:"Task"},s={unversionedId:"reference/tasklist-api/objects/task",id:"reference/tasklist-api/objects/task",isDocsHomePage:!1,title:"Task",description:"<span",source:"@site/docs/reference/tasklist-api/objects/task.mdx",slug:"/reference/tasklist-api/objects/task",permalink:"/docs/reference/tasklist-api/objects/task",editUrl:"https://github.com/camunda-cloud/camunda-cloud-documentation/edit/master/docs/reference/tasklist-api/objects/task.mdx",version:"current",sidebar:"Reference",previous:{title:"Form",permalink:"/docs/reference/tasklist-api/objects/form"},next:{title:"User",permalink:"/docs/reference/tasklist-api/objects/user"}},o=[{value:"Fields",id:"fields",children:[]}],b=function(e){var t=e.children,n=e.color;return Object(i.b)("span",{style:{backgroundColor:n,borderRadius:"2px",color:"#fff",padding:"0.2rem"}},t)},l={rightToc:o,Tag:b};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Describes the User task."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-graphql"}),"type Task {\n  id: ID!\n  name: String!\n  processName: String!\n  creationTime: String!\n  completionTime: String\n  assignee: User\n  variables: [Variable!]\n  taskState: TaskState!\n  sortValues: [String!]\n  isFirst: Boolean\n  formKey: String\n  processDefinitionId: String\n}\n")),Object(i.b)("h3",{id:"fields"},"Fields"),Object(i.b)("h4",{id:"id-id"},Object(i.b)("inlineCode",{parentName:"h4"},"id")," (",Object(i.b)("a",Object(a.a)({parentName:"h4"},{href:"/docs/reference/tasklist-api/scalars/id"}),Object(i.b)("inlineCode",{parentName:"a"},"ID!")),")"),Object(i.b)("p",null,"The unique identifier of the task"),Object(i.b)("h4",{id:"name-string"},Object(i.b)("inlineCode",{parentName:"h4"},"name")," (",Object(i.b)("a",Object(a.a)({parentName:"h4"},{href:"/docs/reference/tasklist-api/scalars/string"}),Object(i.b)("inlineCode",{parentName:"a"},"String!")),")"),Object(i.b)("p",null,"Name of the task"),Object(i.b)("h4",{id:"processname-string"},Object(i.b)("inlineCode",{parentName:"h4"},"processName")," (",Object(i.b)("a",Object(a.a)({parentName:"h4"},{href:"/docs/reference/tasklist-api/scalars/string"}),Object(i.b)("inlineCode",{parentName:"a"},"String!")),")"),Object(i.b)("p",null,"Name of the process"),Object(i.b)("h4",{id:"creationtime-string"},Object(i.b)("inlineCode",{parentName:"h4"},"creationTime")," (",Object(i.b)("a",Object(a.a)({parentName:"h4"},{href:"/docs/reference/tasklist-api/scalars/string"}),Object(i.b)("inlineCode",{parentName:"a"},"String!")),")"),Object(i.b)("p",null,"When was the task created"),Object(i.b)("h4",{id:"completiontime-string"},Object(i.b)("inlineCode",{parentName:"h4"},"completionTime")," (",Object(i.b)("a",Object(a.a)({parentName:"h4"},{href:"/docs/reference/tasklist-api/scalars/string"}),Object(i.b)("inlineCode",{parentName:"a"},"String")),")"),Object(i.b)("p",null,"When was the task completed"),Object(i.b)("h4",{id:"assignee-user"},Object(i.b)("inlineCode",{parentName:"h4"},"assignee")," (",Object(i.b)("a",Object(a.a)({parentName:"h4"},{href:"/docs/reference/tasklist-api/objects/user"}),Object(i.b)("inlineCode",{parentName:"a"},"User")),")"),Object(i.b)("p",null,"Who is assigned to the task"),Object(i.b)("h4",{id:"variables-variable"},Object(i.b)("inlineCode",{parentName:"h4"},"variables")," (",Object(i.b)("a",Object(a.a)({parentName:"h4"},{href:"/docs/reference/tasklist-api/objects/variable"}),Object(i.b)("inlineCode",{parentName:"a"},"[Variable!]")),")"),Object(i.b)("p",null,"Variables associated to the task"),Object(i.b)("h4",{id:"taskstate-taskstate"},Object(i.b)("inlineCode",{parentName:"h4"},"taskState")," (",Object(i.b)("a",Object(a.a)({parentName:"h4"},{href:"/docs/reference/tasklist-api/enums/task-state"}),Object(i.b)("inlineCode",{parentName:"a"},"TaskState!")),")"),Object(i.b)("p",null,"State of the task"),Object(i.b)("h4",{id:"sortvalues-string"},Object(i.b)("inlineCode",{parentName:"h4"},"sortValues")," (",Object(i.b)("a",Object(a.a)({parentName:"h4"},{href:"/docs/reference/tasklist-api/scalars/string"}),Object(i.b)("inlineCode",{parentName:"a"},"[String!]")),")"),Object(i.b)("p",null,"Array of values to be copied into ",Object(i.b)("inlineCode",{parentName:"p"},"TaskQuery")," to request for next or previous page of tasks."),Object(i.b)("h4",{id:"isfirst-boolean"},Object(i.b)("inlineCode",{parentName:"h4"},"isFirst")," (",Object(i.b)("a",Object(a.a)({parentName:"h4"},{href:"/docs/reference/tasklist-api/scalars/boolean"}),Object(i.b)("inlineCode",{parentName:"a"},"Boolean")),")"),Object(i.b)("p",null,"Flag to show that the task is first in current filter"),Object(i.b)("h4",{id:"formkey-string"},Object(i.b)("inlineCode",{parentName:"h4"},"formKey")," (",Object(i.b)("a",Object(a.a)({parentName:"h4"},{href:"/docs/reference/tasklist-api/scalars/string"}),Object(i.b)("inlineCode",{parentName:"a"},"String")),")"),Object(i.b)("p",null,"Reference to the task form"),Object(i.b)("h4",{id:"processdefinitionid-string"},Object(i.b)("inlineCode",{parentName:"h4"},"processDefinitionId")," (",Object(i.b)("a",Object(a.a)({parentName:"h4"},{href:"/docs/reference/tasklist-api/scalars/string"}),Object(i.b)("inlineCode",{parentName:"a"},"String")),")"),Object(i.b)("p",null,"Reference to process definition"))}p.isMDXComponent=!0},662:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return u}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var b=r.a.createContext({}),l=function(e){var t=r.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=l(e.components);return r.a.createElement(b.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},f=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,b=o(e,["components","mdxType","originalType","parentName"]),p=l(n),f=a,u=p["".concat(c,".").concat(f)]||p[f]||d[f]||i;return n?r.a.createElement(u,s(s({ref:t},b),{},{components:n})):r.a.createElement(u,s({ref:t},b))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,c=new Array(i);c[0]=f;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:a,c[1]=s;for(var b=2;b<i;b++)c[b]=n[b];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,n)}f.displayName="MDXCreateElement"}}]);