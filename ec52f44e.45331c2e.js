(window.webpackJsonp=window.webpackJsonp||[]).push([[745],{1669:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/operate-process-view-incident_light-06ade37b588a57b9197cca3f01266178.png"},1670:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/operate-view-instance-incident_light-cde1e490f7afde0af4c295c1845ff252.png"},1671:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/operate-view-instance-edit-icon_light-83b04d29710d119ad9e0c3989aa9f416.png"},1672:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/operate-view-instance-save-var-edit_light-dbb16b38594f56face3d2ba41f622c50.png"},1673:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/operate-process-retry-incident_light-de1fd6d20e757205f8899cc572c33c2c.png"},1674:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/operate-incident-resolved_light-a4fec00de7d7893a2bca9142d221b508.png"},1675:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/operate-incident-resolved-path_light-4917288a94ae5b5d721d8b3471e497ba.png"},812:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return p}));var r=n(3),a=n(7),i=(n(0),n(874)),c={id:"resolve-incidents-update-variables",title:"Variables and incidents"},o={unversionedId:"product-manuals/operate/userguide/resolve-incidents-update-variables",id:"version-1.0/product-manuals/operate/userguide/resolve-incidents-update-variables",isDocsHomePage:!1,title:"Variables and incidents",description:"Every process instance created for the process model used in the Getting Started tutorial requires an orderValue so that the XOR gateway evaluation will happen properly.",source:"@site/versioned_docs/version-1.0/product-manuals/operate/userguide/resolve-incidents-update-variables.md",slug:"/product-manuals/operate/userguide/resolve-incidents-update-variables",permalink:"/docs/1.0/product-manuals/operate/userguide/resolve-incidents-update-variables",editUrl:"https://github.com/camunda-cloud/camunda-cloud-documentation/edit/master/versioned_docs/version-1.0/product-manuals/operate/userguide/resolve-incidents-update-variables.md",version:"1.0",sidebar:"version-1.0/Product Manuals",previous:{title:"Getting familiar with Operate",permalink:"/docs/1.0/product-manuals/operate/userguide/basic-operate-navigation"},next:{title:"Selections and operations",permalink:"/docs/1.0/product-manuals/operate/userguide/selections-operations"}},s=[],l={rightToc:s};function p(e){var t=e.components,c=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},l,c,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Every process instance created for the process model used in the Getting Started tutorial requires an ",Object(i.b)("inlineCode",{parentName:"p"},"orderValue")," so that the XOR gateway evaluation will happen properly. "),Object(i.b)("p",null,"Let\u2019s look at a case where ",Object(i.b)("inlineCode",{parentName:"p"},"orderValue")," is present but was set as a string, but our ",Object(i.b)("inlineCode",{parentName:"p"},"order-process.bpmn")," model requires an integer in order to properly evaluate the ",Object(i.b)("inlineCode",{parentName:"p"},"orderValue")," and route the instance. "),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Linux")),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),'./bin/zbctl --insecure create instance order-process --variables \'{"orderId": "1234", "orderValue":"99"}\'\n')),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Mac")," "),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),'./bin/zbctl.darwin --insecure create instance order-process --variables \'{"orderId": "1234", "orderValue":"99"}\'\n')),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Windows (Powershell)")),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),'./bin/zbctl.exe --insecure create instance order-process --variables \'{\\"orderId\\": \\"1234\\", \\\n"orderValue\\": \\"99\\"}\'\n')),Object(i.b)("p",null,"To advance the instance to our XOR gateway, we\u2019ll quickly create a job worker to complete the ",Object(i.b)("inlineCode",{parentName:"p"},"Initiate Payment")," task: "),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Linux")),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),"./bin/zbctl --insecure create worker initiate-payment --handler cat\n")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Mac")),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),"./bin/zbctl.darwin --insecure create worker initiate-payment --handler cat\n")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Windows (Powershell)")),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),'./bin/zbctl.exe --insecure create worker initiate-payment --handler "findstr .*"\n')),Object(i.b)("p",null,"And we\u2019ll publish a message that will be correlated with the instance so we can advance past the ",Object(i.b)("inlineCode",{parentName:"p"},"Payment Received")," intermediate message catch event: "),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Linux")),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),'./bin/zbctl --insecure publish message "payment-received" --correlationKey="1234"\n')),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Mac")),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),'./bin/zbctl.darwin --insecure publish message "payment-received" --correlationKey="1234"\n')),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Windows (Powershell)")),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),'./bin/zbctl.exe --insecure publish message "payment-received" --correlationKey="1234"\n')),Object(i.b)("p",null,"In the Operate interface, you should now see that the process instance has an "," incident, which means there\u2019s a problem with process execution that needs to be fixed before the process instance can progress to the next step. "),Object(i.b)("p",null,Object(i.b)("img",{alt:"operate-incident-process-view",src:n(1669).default})),Object(i.b)("p",null,"Operate provides tools for diagnosing and resolving incidents. Let\u2019s go through incident diagnosis and resolution step-by-step. "),Object(i.b)("p",null,"When we inspect the process instance, we can see exactly what our incident is: ",Object(i.b)("inlineCode",{parentName:"p"},"Expected to evaluate condition 'orderValue>=100' successfully, but failed because: Cannot compare values of different types: STRING and INTEGER")),Object(i.b)("p",null,Object(i.b)("img",{alt:"operate-incident-instance-view",src:n(1670).default})),Object(i.b)("p",null,"We have enough information to know that to resolve this incident, we need to edit the ",Object(i.b)("inlineCode",{parentName:"p"},"orderValue")," variable so that it\u2019s an integer. To do so, first click on the edit icon next to the variable you\u2019d like to edit. "),Object(i.b)("p",null,Object(i.b)("img",{alt:"operate-incident-edit-variable",src:n(1671).default})),Object(i.b)("p",null,"Next, edit the variable by removing the quotation marks from the ",Object(i.b)("inlineCode",{parentName:"p"},"orderValue")," value. Then click on the checkmark icon to save the change. "),Object(i.b)("p",null,"We were able to solve this particular problem by ",Object(i.b)("em",{parentName:"p"},"editing")," a variable, but it\u2019s worth noting that you can also ",Object(i.b)("em",{parentName:"p"},"add")," a variable if a variable is missing from a process instance altogether. "),Object(i.b)("p",null,Object(i.b)("img",{alt:"operate-incident-save-variable-edit",src:n(1672).default})),Object(i.b)("p",null,"There\u2019s one last step we need to take: initiating a \u201cretry\u201d of the process instance. There are two places on the process instance page where you can initiate a retry:"),Object(i.b)("p",null,Object(i.b)("img",{alt:"operate-retry-instance",src:n(1673).default})),Object(i.b)("p",null,"You should now see that the incident has been resolved, and the process instance has progressed to the next step. Well done! "),Object(i.b)("p",null,Object(i.b)("img",{alt:"operate-incident-resolved-instance-view",src:n(1674).default})),Object(i.b)("p",null,"If you\u2019d like to complete the process instance, you can create a worker for the ",Object(i.b)("inlineCode",{parentName:"p"},"Ship Without Insurance")," task: "),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Linux")),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),"./bin/zbctl --insecure create worker ship-without-insurance --handler cat\n")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Mac")),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),"./bin/zbctl.darwin --insecure create worker ship-without-insurance --handler cat\n")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Windows (Powershell)")),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),'./bin/zbctl.exe --insecure create worker ship-without-insurance --handler "findstr .*"\n')),Object(i.b)("p",null,"The completed process instance with the path taken:"),Object(i.b)("p",null,Object(i.b)("img",{alt:"operate-incident-resolved-path-view",src:n(1675).default})))}p.isMDXComponent=!0},874:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),p=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},b=function(e){var t=p(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),b=p(n),d=r,m=b["".concat(c,".").concat(d)]||b[d]||u[d]||i;return n?a.a.createElement(m,o(o({ref:t},l),{},{components:n})):a.a.createElement(m,o({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,c=new Array(i);c[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,c[1]=o;for(var l=2;l<i;l++)c[l]=n[l];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);