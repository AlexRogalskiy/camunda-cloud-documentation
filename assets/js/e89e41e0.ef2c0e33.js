(self.webpackChunkcamunda_cloud_documentation=self.webpackChunkcamunda_cloud_documentation||[]).push([[20632],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(n),d=o,b=u["".concat(l,".").concat(d)]||u[d]||m[d]||i;return n?r.createElement(b,a(a({ref:t},p),{},{components:n})):r.createElement(b,a({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},34934:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return a},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return c},default:function(){return m}});var r=n(22122),o=n(19756),i=(n(67294),n(3905)),a={id:"metrics",title:"Metrics"},s=void 0,l={unversionedId:"components/zeebe/operations/metrics",id:"version-0.25/components/zeebe/operations/metrics",isDocsHomePage:!1,title:"Metrics",description:"When operating a distributed system like Zeebe, it is important to put proper monitoring in place.",source:"@site/versioned_docs/version-0.25/components/zeebe/operations/metrics.md",sourceDirName:"components/zeebe/operations",slug:"/components/zeebe/operations/metrics",permalink:"/docs/0.25/components/zeebe/operations/metrics",editUrl:"https://github.com/camunda-cloud/camunda-cloud-documentation/edit/master/versioned_docs/version-0.25/components/zeebe/operations/metrics.md",version:"0.25",frontMatter:{id:"metrics",title:"Metrics"},sidebar:"version-0.25/Components",previous:{title:"Setting up a Zeebe Cluster",permalink:"/docs/0.25/components/zeebe/operations/setting-up-a-cluster"},next:{title:"Deploying to Kubernetes",permalink:"/docs/0.25/components/zeebe/operations/kubernetes"}},c=[{value:"Types of metrics",id:"types-of-metrics",children:[]},{value:"Metrics Format",id:"metrics-format",children:[]},{value:"Configuring Metrics",id:"configuring-metrics",children:[]},{value:"Connecting Prometheus",id:"connecting-prometheus",children:[]},{value:"Available Metrics",id:"available-metrics",children:[]},{value:"Grafana",id:"grafana",children:[]}],p={toc:c};function m(e){var t=e.components,a=(0,o.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"When operating a distributed system like Zeebe, it is important to put proper monitoring in place.\nTo facilitate this, Zeebe exposes an extensive set of metrics."),(0,i.kt)("p",null,"Zeebe exposes metrics over an embedded HTTP server."),(0,i.kt)("h2",{id:"types-of-metrics"},"Types of metrics"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Counters"),": a time series that records a growing count of some unit. Examples: number of bytes transmitted over the network, number of workflow instances started, ..."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Gauges"),": a time series that records the current size of some unit. Examples: number of currently open client connections, current number of partitions, ...")),(0,i.kt)("h2",{id:"metrics-format"},"Metrics Format"),(0,i.kt)("p",null,"Zeebe exposes metrics directly in Prometheus text format.\nThe details of the format can be read in the ",(0,i.kt)("a",{parentName:"p",href:"https://prometheus.io/docs/instrumenting/exposition_formats/#text-format-details"},"Prometheus documentation"),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'# HELP zeebe_stream_processor_events_total Number of events processed by stream processor\n# TYPE zeebe_stream_processor_events_total counter\nzeebe_stream_processor_events_total{action="written",partition="1",} 20320.0\nzeebe_stream_processor_events_total{action="processed",partition="1",} 20320.0\nzeebe_stream_processor_events_total{action="skipped",partition="1",} 2153.0\n')),(0,i.kt)("h2",{id:"configuring-metrics"},"Configuring Metrics"),(0,i.kt)("p",null,"The HTTP server to export the metrics can be configured in the ",(0,i.kt)("a",{parentName:"p",href:"/docs/0.25/components/zeebe/appendix/broker-config-template"},"configuration file"),"."),(0,i.kt)("h2",{id:"connecting-prometheus"},"Connecting Prometheus"),(0,i.kt)("p",null,"As explained, Zeebe exposes the metrics over a HTTP server. The default port is ",(0,i.kt)("inlineCode",{parentName:"p"},"9600"),"."),(0,i.kt)("p",null,"Add the following entry to your ",(0,i.kt)("inlineCode",{parentName:"p"},"prometheus.yml"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"- job_name: zeebe\n  scrape_interval: 15s\n  metrics_path: /metrics\n  scheme: http\n  static_configs:\n  - targets:\n    - localhost: 9600\n")),(0,i.kt)("h2",{id:"available-metrics"},"Available Metrics"),(0,i.kt)("p",null,"All Zeebe related metrics have a ",(0,i.kt)("inlineCode",{parentName:"p"},"zeebe_"),"-prefix."),(0,i.kt)("p",null,"Most metrics have the following common label:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"partition"),": cluster-unique id of the partition")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Metrics related to workflow processing:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"zeebe_stream_processor_events_total"),": The number of events processed by the stream processor.\nThe ",(0,i.kt)("inlineCode",{parentName:"li"},"action")," label separates processed, skipped and written events. "),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"zeebe_exporter_events_total"),": The number of events processed by the exporter processor.\nThe ",(0,i.kt)("inlineCode",{parentName:"li"},"action")," label separates exported and skipped events. "),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"zeebe_element_instance_events_total"),": The number of occurred workflow element instance events.\nThe ",(0,i.kt)("inlineCode",{parentName:"li"},"action")," label separates the number of activated, completed and terminated elements.\nThe ",(0,i.kt)("inlineCode",{parentName:"li"},"type")," label separates different BPMN element types."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"zeebe_running_workflow_instances_total"),": The number of currently running workflow instances, i.e.\nnot completed or terminated."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"zeebe_job_events_total"),": The number of job events. The ",(0,i.kt)("inlineCode",{parentName:"li"},"action")," label separates the number of\ncreated, activated, timed out, completed, failed and canceled jobs."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"zeebe_pending_jobs_total"),": The number of currently pending jobs, i.e. not completed or terminated."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"zeebe_incident_events_total"),": The number of incident events. The ",(0,i.kt)("inlineCode",{parentName:"li"},"action")," label separates the number\nof created and resolved incident events."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"zeebe_pending_incidents_total"),": The number of currently pending incident, i.e. not resolved.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Metrics related to performance:")),(0,i.kt)("p",null,"Zeebe has a back-pressure mechanism by which it rejects requests, when it receives more requests than it can handle with out incurring high processing latency.\nThe following metrics can be used to monitor back-pressure and processing latency of the commands."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"zeebe_dropped_request_count_total"),": The number of user requests rejected by the broker due to backpressure."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"zeebe_backpressure_requests_limit"),": The limit for the number of inflight requests used for backpressure."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"zeebe_stream_processor_latency_bucket"),": The processing latency for commands and event.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Metrics related to health:")),(0,i.kt)("p",null,"The health of partitions in a broker can be monitored by the metric ",(0,i.kt)("inlineCode",{parentName:"p"},"zeebe_health"),". "),(0,i.kt)("h2",{id:"grafana"},"Grafana"),(0,i.kt)("p",null,"Zeebe comes with a pre-built dashboard, available in the repository:\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/zeebe-io/zeebe/tree/develop/monitor/grafana/zeebe.json"},"monitor/grafana/zeebe.json")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://grafana.com/docs/grafana/latest/reference/export_import/#importing-a-dashboard"},"Import"),"\nit into your Grafana instance, then select the correct Prometheus data source (important if you have more than one), and\nyou should be greeted with the following dashboard:"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"cluster",src:n(62876).Z})))}m.isMDXComponent=!0},62876:function(e,t,n){"use strict";t.Z=n.p+"assets/images/grafana-preview-b55d5882a8636cf3b0bae96bcfb29658.png"}}]);