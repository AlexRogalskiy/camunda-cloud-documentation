(self.webpackChunkcamunda_cloud_documentation=self.webpackChunkcamunda_cloud_documentation||[]).push([[83313],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return s},kt:function(){return m}});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=o.createContext({}),c=function(e){var t=o.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=c(e.components);return o.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,u=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=c(n),m=r,k=p["".concat(u,".").concat(m)]||p[m]||d[m]||i;return n?o.createElement(k,a(a({ref:t},s),{},{components:n})):o.createElement(k,a({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=p;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:r,a[1]=l;for(var c=2;c<i;c++)a[c]=n[c];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},56001:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return a},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return c},default:function(){return d}});var o=n(22122),r=n(19756),i=(n(67294),n(3905)),a={id:"install",title:"Docker container"},l=void 0,u={unversionedId:"product-manuals/zeebe/deployment-guide/docker/install",id:"version-1.0/product-manuals/zeebe/deployment-guide/docker/install",isDocsHomePage:!1,title:"Docker container",description:"This page guides you through the initial installation of the Zeebe broker and Camunda Modeler for development purposes.",source:"@site/versioned_docs/version-1.0/product-manuals/zeebe/deployment-guide/docker/install.md",sourceDirName:"product-manuals/zeebe/deployment-guide/docker",slug:"/product-manuals/zeebe/deployment-guide/docker/install",permalink:"/docs/1.0/product-manuals/zeebe/deployment-guide/docker/install",editUrl:"https://github.com/camunda-cloud/camunda-cloud-documentation/edit/master/versioned_docs/version-1.0/product-manuals/zeebe/deployment-guide/docker/install.md",version:"1.0",frontMatter:{id:"install",title:"Docker container"},sidebar:"version-1.0/Product Manuals",previous:{title:"Quickstart",permalink:"/docs/1.0/product-manuals/zeebe/deployment-guide/local/quickstart"},next:{title:"Overview",permalink:"/docs/1.0/product-manuals/zeebe/deployment-guide/kubernetes/index"}},c=[{value:"Using Docker",id:"using-docker",children:[{value:"Prerequisites",id:"prerequisites",children:[]},{value:"Docker configurations for docker-compose",id:"docker-configurations-for-docker-compose",children:[]},{value:"Using Docker without docker-compose",id:"using-docker-without-docker-compose",children:[]}]},{value:"Install the Camunda Modeler",id:"install-the-camunda-modeler",children:[]}],s={toc:c};function d(e){var t=e.components,n=(0,r.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,o.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"This page guides you through the initial installation of the Zeebe broker and Camunda Modeler for development purposes."),(0,i.kt)("h2",{id:"using-docker"},"Using Docker"),(0,i.kt)("p",null,"The easiest way to develop with Zeebe is using Docker. Using Docker provides you with a consistent environment, and we recommend it for development."),(0,i.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Operating System:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Linux"),(0,i.kt)("li",{parentName:"ul"},"Windows/MacOS (development only, not supported for production)"))),(0,i.kt)("li",{parentName:"ul"},"Docker")),(0,i.kt)("h3",{id:"docker-configurations-for-docker-compose"},"Docker configurations for docker-compose"),(0,i.kt)("p",null,"Docker configurations for starting Zeebe using ",(0,i.kt)("inlineCode",{parentName:"p"},"docker-compose")," are available in the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/zeebe-io/zeebe-docker-compose/blob/master/README.md"},"zeebe-docker-compose")," repository."),(0,i.kt)("p",null,"This repository contains several pre-defined configuration options:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Single node"),(0,i.kt)("li",{parentName:"ul"},"Small cluster with and without gateway"),(0,i.kt)("li",{parentName:"ul"},"Single node with Operate"),(0,i.kt)("li",{parentName:"ul"},"Single node with simple monitor")),(0,i.kt)("p",null,"This allows you to start using complex configurations with a single command. Later you can tailor these configurations to your needs, when you are ready to delve to that level."),(0,i.kt)("p",null,"Further instructions for using these configurations are in the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/zeebe-io/zeebe-docker-compose/blob/master/README.md"},"README"),"."),(0,i.kt)("h3",{id:"using-docker-without-docker-compose"},"Using Docker without docker-compose"),(0,i.kt)("p",null,"You can run Zeebe with Docker:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"docker run --name zeebe -p 26500-26502:26500-26502 camunda/zeebe:latest\n")),(0,i.kt)("p",null,"This will give you a a single broker node."),(0,i.kt)("h4",{id:"exposed-ports"},"Exposed ports"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"26500"),": Gateway API"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"26501"),": Command API (gateway-to-broker)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"26502"),": Internal API (broker-to-broker)")),(0,i.kt)("h4",{id:"volumes"},"Volumes"),(0,i.kt)("p",null,"The default data volume is under ",(0,i.kt)("inlineCode",{parentName:"p"},"/usr/local/zeebe/data"),". It contains\nall data which should be persisted."),(0,i.kt)("h4",{id:"configuration"},"Configuration"),(0,i.kt)("p",null,"The Zeebe configuration is located at ",(0,i.kt)("inlineCode",{parentName:"p"},"/usr/local/zeebe/config/application.yaml"),".\nThe logging configuration is located at ",(0,i.kt)("inlineCode",{parentName:"p"},"/usr/local/zeebe/config/log4j2.xml"),"."),(0,i.kt)("p",null,"The configuration of the docker image can also be changed by using environment\nvariables. The configuration template files also contains information on the environment\nvariables to use for each configuration setting."),(0,i.kt)("p",null,"Available environment variables:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"ZEEBE_LOG_LEVEL")," - sets the log level of the Zeebe Logger (default: ",(0,i.kt)("inlineCode",{parentName:"li"},"info"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"ZEEBE_BROKER_NETWORK_HOST")," - sets the host address to bind to instead of the IP of the container."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"ZEEBE_BROKER_CLUSTER_INITIALCONTACTPOINTS")," - sets the contact points of other brokers in a cluster setup.")),(0,i.kt)("h2",{id:"install-the-camunda-modeler"},"Install the Camunda Modeler"),(0,i.kt)("p",null,"The Camunda Modeler is an open-source desktop BPMN modeling application created specifically for Zeebe."),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://camunda.com/download/modeler/"},"You can download the most recent Camunda Modeler release here.")))}d.isMDXComponent=!0}}]);