(self.webpackChunkcamunda_cloud_documentation=self.webpackChunkcamunda_cloud_documentation||[]).push([[3904],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return u},kt:function(){return d}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),f=c(r),d=a,k=f["".concat(l,".").concat(d)]||f[d]||p[d]||i;return r?n.createElement(k,s(s({ref:t},u),{},{components:r})):n.createElement(k,s({ref:t},u))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,s=new Array(i);s[0]=f;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var c=2;c<i;c++)s[c]=r[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},66487:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return s},contentTitle:function(){return o},metadata:function(){return l},toc:function(){return c},Tag:function(){return u},default:function(){return f}});var n=r(22122),a=r(19756),i=(r(67294),r(3905)),s={id:"task-query",title:"TaskQuery"},o=void 0,l={unversionedId:"reference/tasklist-api/inputs/task-query",id:"version-1.1/reference/tasklist-api/inputs/task-query",isDocsHomePage:!1,title:"TaskQuery",description:"<span",source:"@site/versioned_docs/version-1.1/reference/tasklist-api/inputs/task-query.mdx",sourceDirName:"reference/tasklist-api/inputs",slug:"/reference/tasklist-api/inputs/task-query",permalink:"/docs/1.1/reference/tasklist-api/inputs/task-query",editUrl:"https://github.com/camunda-cloud/camunda-cloud-documentation/edit/master/versioned_docs/version-1.1/reference/tasklist-api/inputs/task-query.mdx",version:"1.1",frontMatter:{id:"task-query",title:"TaskQuery"},sidebar:"version-1.1/Reference",previous:{title:"TaskState",permalink:"/docs/1.1/reference/tasklist-api/enums/task-state"},next:{title:"VariableInput",permalink:"/docs/1.1/reference/tasklist-api/inputs/variable-input"}},c=[{value:"Fields",id:"fields",children:[]}],u=function(e){var t=e.children,r=e.color;return(0,i.kt)("span",{style:{backgroundColor:r,borderRadius:"2px",color:"#fff",padding:"0.2rem"}},t)},p={toc:c,Tag:u};function f(e){var t=e.components,r=(0,a.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Task query - query to get one page of tasks."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-graphql"},"type TaskQuery {\n  state: TaskState\n  assigned: Boolean\n  assignee: String\n  pageSize: Int\n  searchAfter: [String!]\n  searchAfterOrEqual: [String!]\n  searchBefore: [String!]\n  searchBeforeOrEqual: [String!]\n}\n")),(0,i.kt)("h3",{id:"fields"},"Fields"),(0,i.kt)("h4",{id:"state-taskstate"},(0,i.kt)("inlineCode",{parentName:"h4"},"state")," (",(0,i.kt)("a",{parentName:"h4",href:"/docs/reference/tasklist-api/enums/task-state"},(0,i.kt)("inlineCode",{parentName:"a"},"TaskState")),")"),(0,i.kt)("p",null,"State of the tasks"),(0,i.kt)("h4",{id:"assigned-boolean"},(0,i.kt)("inlineCode",{parentName:"h4"},"assigned")," (",(0,i.kt)("a",{parentName:"h4",href:"/docs/reference/tasklist-api/scalars/boolean"},(0,i.kt)("inlineCode",{parentName:"a"},"Boolean")),")"),(0,i.kt)("p",null,"Are the tasks assigned?"),(0,i.kt)("h4",{id:"assignee-string"},(0,i.kt)("inlineCode",{parentName:"h4"},"assignee")," (",(0,i.kt)("a",{parentName:"h4",href:"/docs/reference/tasklist-api/scalars/string"},(0,i.kt)("inlineCode",{parentName:"a"},"String")),")"),(0,i.kt)("p",null,"Who is assigned to the tasks?"),(0,i.kt)("h4",{id:"pagesize-int"},(0,i.kt)("inlineCode",{parentName:"h4"},"pageSize")," (",(0,i.kt)("a",{parentName:"h4",href:"/docs/reference/tasklist-api/scalars/int"},(0,i.kt)("inlineCode",{parentName:"a"},"Int")),")"),(0,i.kt)("p",null,"Size of tasks page (default: 50)."),(0,i.kt)("h4",{id:"searchafter-string"},(0,i.kt)("inlineCode",{parentName:"h4"},"searchAfter")," (",(0,i.kt)("a",{parentName:"h4",href:"/docs/reference/tasklist-api/scalars/string"},(0,i.kt)("inlineCode",{parentName:"a"},"[String!]")),")"),(0,i.kt)("p",null,"Array of values copied from ",(0,i.kt)("inlineCode",{parentName:"p"},"sortValues")," of one of the tasks, query will return page of tasks going directly after this values plus same sort values."),(0,i.kt)("h4",{id:"searchafterorequal-string"},(0,i.kt)("inlineCode",{parentName:"h4"},"searchAfterOrEqual")," (",(0,i.kt)("a",{parentName:"h4",href:"/docs/reference/tasklist-api/scalars/string"},(0,i.kt)("inlineCode",{parentName:"a"},"[String!]")),")"),(0,i.kt)("p",null,"Array of values copied from ",(0,i.kt)("inlineCode",{parentName:"p"},"sortValues")," of one of the tasks, query will return page of tasks going directly after this values."),(0,i.kt)("h4",{id:"searchbefore-string"},(0,i.kt)("inlineCode",{parentName:"h4"},"searchBefore")," (",(0,i.kt)("a",{parentName:"h4",href:"/docs/reference/tasklist-api/scalars/string"},(0,i.kt)("inlineCode",{parentName:"a"},"[String!]")),")"),(0,i.kt)("p",null,"Array of values copied from ",(0,i.kt)("inlineCode",{parentName:"p"},"sortValues")," of one of the tasks, query will return page of tasks going directly before this values plus same sort values."),(0,i.kt)("h4",{id:"searchbeforeorequal-string"},(0,i.kt)("inlineCode",{parentName:"h4"},"searchBeforeOrEqual")," (",(0,i.kt)("a",{parentName:"h4",href:"/docs/reference/tasklist-api/scalars/string"},(0,i.kt)("inlineCode",{parentName:"a"},"[String!]")),")"),(0,i.kt)("p",null,"Array of values copied from ",(0,i.kt)("inlineCode",{parentName:"p"},"sortValues")," of one of the tasks, query will return page of tasks going directly before this values."))}f.isMDXComponent=!0}}]);