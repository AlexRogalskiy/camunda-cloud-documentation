(self.webpackChunkcamunda_cloud_documentation=self.webpackChunkcamunda_cloud_documentation||[]).push([[17418],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return u}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},k={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=c(n),u=a,f=d["".concat(l,".").concat(u)]||d[u]||k[u]||i;return n?r.createElement(f,s(s({ref:t},p),{},{components:n})):r.createElement(f,s({ref:t},p))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,s=new Array(i);s[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var c=2;c<i;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},77932:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return o},metadata:function(){return l},toc:function(){return c},Tag:function(){return p},default:function(){return d}});var r=n(22122),a=n(19756),i=(n(67294),n(3905)),s={id:"task",title:"Task"},o=void 0,l={unversionedId:"reference/tasklist-api/objects/task",id:"version-1.0/reference/tasklist-api/objects/task",isDocsHomePage:!1,title:"Task",description:"<span",source:"@site/versioned_docs/version-1.0/reference/tasklist-api/objects/task.mdx",sourceDirName:"reference/tasklist-api/objects",slug:"/reference/tasklist-api/objects/task",permalink:"/docs/1.0/reference/tasklist-api/objects/task",editUrl:"https://github.com/camunda-cloud/camunda-cloud-documentation/edit/master/versioned_docs/version-1.0/reference/tasklist-api/objects/task.mdx",version:"1.0",frontMatter:{id:"task",title:"Task"},sidebar:"version-1.0/Reference",previous:{title:"Form",permalink:"/docs/1.0/reference/tasklist-api/objects/form"},next:{title:"User",permalink:"/docs/1.0/reference/tasklist-api/objects/user"}},c=[{value:"Fields",id:"fields",children:[]}],p=function(e){var t=e.children,n=e.color;return(0,i.kt)("span",{style:{backgroundColor:n,borderRadius:"2px",color:"#fff",padding:"0.2rem"}},t)},k={toc:c,Tag:p};function d(e){var t=e.components,n=(0,a.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,r.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Describes the User task."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-graphql"},"type Task {\n  id: ID!\n  name: String!\n  processName: String!\n  creationTime: String!\n  completionTime: String\n  assignee: User\n  variables: [Variable!]\n  taskState: TaskState!\n  sortValues: [String!]\n  isFirst: Boolean\n  formKey: String\n  processDefinitionId: String\n}\n")),(0,i.kt)("h3",{id:"fields"},"Fields"),(0,i.kt)("h4",{id:"id-id"},(0,i.kt)("inlineCode",{parentName:"h4"},"id")," (",(0,i.kt)("a",{parentName:"h4",href:"/docs/reference/tasklist-api/scalars/id"},(0,i.kt)("inlineCode",{parentName:"a"},"ID!")),")"),(0,i.kt)("p",null,"The unique identifier of the task"),(0,i.kt)("h4",{id:"name-string"},(0,i.kt)("inlineCode",{parentName:"h4"},"name")," (",(0,i.kt)("a",{parentName:"h4",href:"/docs/reference/tasklist-api/scalars/string"},(0,i.kt)("inlineCode",{parentName:"a"},"String!")),")"),(0,i.kt)("p",null,"Name of the task"),(0,i.kt)("h4",{id:"processname-string"},(0,i.kt)("inlineCode",{parentName:"h4"},"processName")," (",(0,i.kt)("a",{parentName:"h4",href:"/docs/reference/tasklist-api/scalars/string"},(0,i.kt)("inlineCode",{parentName:"a"},"String!")),")"),(0,i.kt)("p",null,"Name of the process"),(0,i.kt)("h4",{id:"creationtime-string"},(0,i.kt)("inlineCode",{parentName:"h4"},"creationTime")," (",(0,i.kt)("a",{parentName:"h4",href:"/docs/reference/tasklist-api/scalars/string"},(0,i.kt)("inlineCode",{parentName:"a"},"String!")),")"),(0,i.kt)("p",null,"When was the task created"),(0,i.kt)("h4",{id:"completiontime-string"},(0,i.kt)("inlineCode",{parentName:"h4"},"completionTime")," (",(0,i.kt)("a",{parentName:"h4",href:"/docs/reference/tasklist-api/scalars/string"},(0,i.kt)("inlineCode",{parentName:"a"},"String")),")"),(0,i.kt)("p",null,"When was the task completed"),(0,i.kt)("h4",{id:"assignee-user"},(0,i.kt)("inlineCode",{parentName:"h4"},"assignee")," (",(0,i.kt)("a",{parentName:"h4",href:"/docs/reference/tasklist-api/objects/user"},(0,i.kt)("inlineCode",{parentName:"a"},"User")),")"),(0,i.kt)("p",null,"Who is assigned to the task"),(0,i.kt)("h4",{id:"variables-variable"},(0,i.kt)("inlineCode",{parentName:"h4"},"variables")," (",(0,i.kt)("a",{parentName:"h4",href:"/docs/reference/tasklist-api/objects/variable"},(0,i.kt)("inlineCode",{parentName:"a"},"[Variable!]")),")"),(0,i.kt)("p",null,"Variables associated to the task"),(0,i.kt)("h4",{id:"taskstate-taskstate"},(0,i.kt)("inlineCode",{parentName:"h4"},"taskState")," (",(0,i.kt)("a",{parentName:"h4",href:"/docs/reference/tasklist-api/enums/task-state"},(0,i.kt)("inlineCode",{parentName:"a"},"TaskState!")),")"),(0,i.kt)("p",null,"State of the task"),(0,i.kt)("h4",{id:"sortvalues-string"},(0,i.kt)("inlineCode",{parentName:"h4"},"sortValues")," (",(0,i.kt)("a",{parentName:"h4",href:"/docs/reference/tasklist-api/scalars/string"},(0,i.kt)("inlineCode",{parentName:"a"},"[String!]")),")"),(0,i.kt)("p",null,"Array of values to be copied into ",(0,i.kt)("inlineCode",{parentName:"p"},"TaskQuery")," to request for next or previous page of tasks."),(0,i.kt)("h4",{id:"isfirst-boolean"},(0,i.kt)("inlineCode",{parentName:"h4"},"isFirst")," (",(0,i.kt)("a",{parentName:"h4",href:"/docs/reference/tasklist-api/scalars/boolean"},(0,i.kt)("inlineCode",{parentName:"a"},"Boolean")),")"),(0,i.kt)("p",null,"Flag to show that the task is first in current filter"),(0,i.kt)("h4",{id:"formkey-string"},(0,i.kt)("inlineCode",{parentName:"h4"},"formKey")," (",(0,i.kt)("a",{parentName:"h4",href:"/docs/reference/tasklist-api/scalars/string"},(0,i.kt)("inlineCode",{parentName:"a"},"String")),")"),(0,i.kt)("p",null,"Reference to the task form"),(0,i.kt)("h4",{id:"processdefinitionid-string"},(0,i.kt)("inlineCode",{parentName:"h4"},"processDefinitionId")," (",(0,i.kt)("a",{parentName:"h4",href:"/docs/reference/tasklist-api/scalars/string"},(0,i.kt)("inlineCode",{parentName:"a"},"String")),")"),(0,i.kt)("p",null,"Reference to process definition"))}d.isMDXComponent=!0}}]);