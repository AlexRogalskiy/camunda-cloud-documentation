(self.webpackChunkcamunda_cloud_documentation=self.webpackChunkcamunda_cloud_documentation||[]).push([[94301],{3905:function(e,t,a){"use strict";a.d(t,{Zo:function(){return d},kt:function(){return p}});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),c=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=c(a),p=r,f=u["".concat(l,".").concat(p)]||u[p]||m[p]||s;return a?n.createElement(f,o(o({ref:t},d),{},{components:a})):n.createElement(f,o({ref:t},d))}));function p(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=a.length,o=new Array(s);o[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var c=2;c<s;c++)o[c]=a[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},23913:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return o},metadata:function(){return i},toc:function(){return l},default:function(){return d}});var n=a(22122),r=a(19756),s=(a(67294),a(3905)),o={id:"camunda-forms",title:"Camunda Forms"},i={unversionedId:"product-manuals/tasklist/userguide/camunda-forms",id:"version-1.0/product-manuals/tasklist/userguide/camunda-forms",isDocsHomePage:!1,title:"Camunda Forms",description:"What are Camunda Forms?",source:"@site/versioned_docs/version-1.0/product-manuals/tasklist/userguide/camunda-forms.md",sourceDirName:"product-manuals/tasklist/userguide",slug:"/product-manuals/tasklist/userguide/camunda-forms",permalink:"/docs/1.0/product-manuals/tasklist/userguide/camunda-forms",editUrl:"https://github.com/camunda-cloud/camunda-cloud-documentation/edit/master/versioned_docs/version-1.0/product-manuals/tasklist/userguide/camunda-forms.md",version:"1.0",frontMatter:{id:"camunda-forms",title:"Camunda Forms"},sidebar:"version-1.0/Product Manuals",previous:{title:"Overview and example use case",permalink:"/docs/1.0/product-manuals/tasklist/userguide/overview"},next:{title:"Install and start Tasklist",permalink:"/docs/1.0/product-manuals/tasklist/deployment/install-and-start"}},l=[{value:"What are Camunda Forms?",id:"what-are-camunda-forms",children:[]},{value:"How to use Camunda Forms?",id:"how-to-use-camunda-forms",children:[{value:"Modeling the diagram and form",id:"modeling-the-diagram-and-form",children:[]},{value:"Deploying the diagram",id:"deploying-the-diagram",children:[]},{value:"Completing the task",id:"completing-the-task",children:[]},{value:"Checking instance on Operate",id:"checking-instance-on-operate",children:[]}]}],c={toc:l};function d(e){var t=e.components,o=(0,r.Z)(e,["components"]);return(0,s.kt)("wrapper",(0,n.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"what-are-camunda-forms"},"What are Camunda Forms?"),(0,s.kt)("p",null,"Camunda Forms is one of the ways of handling a user task on Tasklist. These forms can be created in the Camunda Modeler where they can also be embedded in the BPMN file with your diagram and then assign a form to a user task."),(0,s.kt)("p",null,"After deploying a diagram with an embedded form, Tasklist will import this form schema and use it to render the form on every task assigned to it."),(0,s.kt)("p",null,"All new tasks that have a form assigned to it on the BPMN diagram will render the form modeled on the Camunda Modeler. The fields will be pre-filled with variables with the same names as the respective fields. When the task is complete, variables will be updated or created based on the field names of the form."),(0,s.kt)("h2",{id:"how-to-use-camunda-forms"},"How to use Camunda Forms?"),(0,s.kt)("h3",{id:"modeling-the-diagram-and-form"},"Modeling the diagram and form"),(0,s.kt)("p",null,"Open the Camunda Modeler and create a new diagram for the Zeebe Engine.\n",(0,s.kt)("img",{alt:"Camunda Modeler initial screen with BPMN Diagram (Zeebe engine) highlighted",src:a(73855).Z})),(0,s.kt)("p",null,"Model a process with a user task\n",(0,s.kt)("img",{alt:"BPMN diagram modeled with a user task",src:a(3878).Z})),(0,s.kt)("p",null,"Now create a form by clicking on ",(0,s.kt)("strong",{parentName:"p"},"Form (Camunda Forms)"),"\n",(0,s.kt)("img",{alt:"Camunda Modeler initial screen with Forms (Camunda Forms) highlighted",src:a(34004).Z})),(0,s.kt)("p",null,"Model your form and click on the bottom left corner that says ",(0,s.kt)("strong",{parentName:"p"},"JSON")," to switch to the JSON view."),(0,s.kt)("p",null,"Pay attention when naming the fields of your form - fields will have their values pre-filled from variables that have the same name."),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Form modeled with arrow pointing to button on bottom left corner with text JSON",src:a(33712).Z})),(0,s.kt)("p",null,"Copy the JSON schema\n",(0,s.kt)("img",{alt:"JSON view of the form modeled",src:a(10364).Z})),(0,s.kt)("p",null,"Go back to the BPMN diagram you modeled earlier, select the ",(0,s.kt)("strong",{parentName:"p"},"user task"),", and click on the ",(0,s.kt)("strong",{parentName:"p"},"Forms")," tab. After switching tabs you should see the field where you can paste the form JSON schema. Paste the schema and save the file.\n",(0,s.kt)("img",{alt:"BPMN Diagram with User Task selected, Forms tab clicked, and Form JSON configuration field filled",src:a(81753).Z})),(0,s.kt)("h3",{id:"deploying-the-diagram"},"Deploying the diagram"),(0,s.kt)("p",null,"Deploy your diagram to Zeebe and create an instance."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"zbctl deploy /path/to/my/diagram.bpmn\nzbctl create instance diagram-id\n")),(0,s.kt)("h3",{id:"completing-the-task"},"Completing the task"),(0,s.kt)("p",null,"Now open Tasklist, you should see an unclaimed task, click on it and the details will open with the form you modeled earlier.\n",(0,s.kt)("img",{alt:"Tasklist initial page with new unclaimed task created",src:a(4236).Z})),(0,s.kt)("p",null,"Claim this task, fill in the form, and complete the task.\n",(0,s.kt)("img",{alt:"Selected task claimed with form filled",src:a(31055).Z})),(0,s.kt)("p",null,"If you filter by ",(0,s.kt)("strong",{parentName:"p"},"Completed Tasks")," you should see your task listed.\n",(0,s.kt)("img",{alt:"Tasks filtered by Completed Tasks with previous task completed",src:a(154).Z})),(0,s.kt)("h3",{id:"checking-instance-on-operate"},"Checking instance on Operate"),(0,s.kt)("p",null,"If you go to Operate you should see your instance completed (if your diagram consisted of only 1 user task).\n",(0,s.kt)("img",{alt:"Operate Instances page with completed filter checked and one Instance visible",src:a(93567).Z})),(0,s.kt)("p",null,"Go to the instance details page, you can see that values you filled on the form are now process variables.\n",(0,s.kt)("img",{alt:"Details page of the completed Instance",src:a(16745).Z})))}d.isMDXComponent=!0},73855:function(e,t,a){"use strict";t.Z=a.p+"assets/images/camunda-forms-1-new-zeebe-diagram-b4c6507cd07e1f92eb9acdc0165a71a1.png"},93567:function(e,t,a){"use strict";t.Z=a.p+"assets/images/camunda-forms-10-process-instances-page-e964d258ab100ed5c229784b578d2a58.png"},16745:function(e,t,a){"use strict";t.Z=a.p+"assets/images/camunda-forms-11-process-completed-single-instance-6b48e248c832ff89e6d9c25416bad2c0.png"},3878:function(e,t,a){"use strict";t.Z=a.p+"assets/images/camunda-forms-2-bpmn-creation-09547dfaf2bc94ef8c60f6b0a0e3abf7.png"},34004:function(e,t,a){"use strict";t.Z=a.p+"assets/images/camunda-forms-3-formjs-creation-2ee14fc9ce34d8e92a32677d82b70294.png"},33712:function(e,t,a){"use strict";t.Z=a.p+"assets/images/camunda-forms-4-form-modeler-1b61f61fd174fdeeba0ca984d7185319.png"},10364:function(e,t,a){"use strict";t.Z=a.p+"assets/images/camunda-forms-5-form-json-f26b31b4429171e223b25507b3290cb5.png"},81753:function(e,t,a){"use strict";t.Z=a.p+"assets/images/camunda-forms-6-set-form-json-user-task-994e783617955ef8a1666f341b047de8.png"},4236:function(e,t,a){"use strict";t.Z=a.p+"assets/images/camunda-forms-7-task-unclaimed-4e1ac6b62561cf3f1d9cf02db60c700d.png"},31055:function(e,t,a){"use strict";t.Z=a.p+"assets/images/camunda-forms-8-task-claimed-filled-1c7e0fbe110c9ff73f04b66f7e8531e8.png"},154:function(e,t,a){"use strict";t.Z=a.p+"assets/images/camunda-forms-9-task-completed-details-tasklist-440cc8e90398b15a03075d00cb0581ef.png"}}]);