(self.webpackChunkcamunda_cloud_documentation=self.webpackChunkcamunda_cloud_documentation||[]).push([[83873],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return m}});var c=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);t&&(c=c.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,c)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,c,r=function(e,t){if(null==e)return{};var n,c,r={},o=Object.keys(e);for(c=0;c<o.length;c++)n=o[c],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(c=0;c<o.length;c++)n=o[c],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=c.createContext({}),l=function(e){var t=c.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return c.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return c.createElement(c.Fragment,{},t)}},d=c.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),d=l(n),m=r,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return n?c.createElement(f,i(i({ref:t},p),{},{components:n})):c.createElement(f,i({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a.mdxType="string"==typeof e?e:r,i[1]=a;for(var l=2;l<o;l++)i[l]=n[l];return c.createElement.apply(null,i)}return c.createElement.apply(null,n)}d.displayName="MDXCreateElement"},42673:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return a},metadata:function(){return s},toc:function(){return l},default:function(){return u}});var c=n(22122),r=n(19756),o=(n(67294),n(3905)),i={id:"index",sidebar_label:"Overview",title:"Technical concepts"},a=void 0,s={unversionedId:"components/zeebe/technical-concepts/index",id:"version-1.1/components/zeebe/technical-concepts/index",isDocsHomePage:!1,title:"Technical concepts",description:"This chapter gives an overview of Zeebe's underlying technical concepts.",source:"@site/versioned_docs/version-1.1/components/zeebe/technical-concepts/index.md",sourceDirName:"components/zeebe/technical-concepts",slug:"/components/zeebe/technical-concepts/index",permalink:"/docs/1.1/components/zeebe/technical-concepts/index",editUrl:"https://github.com/camunda-cloud/camunda-cloud-documentation/edit/master/versioned_docs/version-1.1/components/zeebe/technical-concepts/index.md",version:"1.1",frontMatter:{id:"index",sidebar_label:"Overview",title:"Technical concepts"},sidebar:"version-1.1/Components",previous:{title:"Introduction",permalink:"/docs/1.1/components/zeebe/zeebe-overview"},next:{title:"Architecture",permalink:"/docs/1.1/components/zeebe/technical-concepts/architecture"}},l=[],p={toc:l};function u(e){var t=e.components,n=(0,r.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,c.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This chapter gives an overview of Zeebe's underlying technical concepts."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/1.1/components/zeebe/technical-concepts/architecture"},"Architecture")," - introduces you to the internal components of Zeebe, as well as, interfaces for external systems to interact with Zeebe."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/1.1/components/zeebe/technical-concepts/clustering"},"Clustering")," - discusses the internal structure and properties of a Zeebe cluster."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/1.1/components/zeebe/technical-concepts/partitions"},"Partitions")," - sheds light on how Zeebe achieves horizontal scalability."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/1.1/components/zeebe/technical-concepts/internal-processing"},"Internal processing")," - explains the basics of Zeebe's event processing."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/1.1/components/zeebe/technical-concepts/process-lifecycles"},"Process lifecycles")," - expands on the event processing concept and goes into more detail regarding the lifecycles of selected process elements."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/1.1/components/zeebe/technical-concepts/protocols"},"Protocols")," - explains how external clients communicate with Zeebe."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/1.1/components/zeebe/technical-concepts/exporters"},"Exporters")," - discusses the extension point to add additional processing logic for each record in the event stream.")),(0,o.kt)("p",null,"In addition to these sections, you may also be interested in Camunda Cloud ",(0,o.kt)("a",{parentName:"p",href:"/docs/1.1/components/best-practices"},"Best Practices"),"."))}u.isMDXComponent=!0}}]);