(self.webpackChunkcamunda_cloud_documentation=self.webpackChunkcamunda_cloud_documentation||[]).push([[98942],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var i=r.createContext({}),s=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,a=e.originalType,i=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=s(n),m=l,f=p["".concat(i,".").concat(m)]||p[m]||d[m]||a;return n?r.createElement(f,o(o({ref:t},u),{},{components:n})):r.createElement(f,o({ref:t},u))}));function m(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=n.length,o=new Array(a);o[0]=p;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:l,o[1]=c;for(var s=2;s<a;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},6589:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return o},metadata:function(){return c},toc:function(){return i},default:function(){return u}});var r=n(22122),l=n(19756),a=(n(67294),n(3905)),o={id:"cloud-console-api-reference",title:"Console API Reference (REST)"},c={unversionedId:"reference/cloud-console-api/cloud-console-api-reference",id:"version-0.25/reference/cloud-console-api/cloud-console-api-reference",isDocsHomePage:!1,title:"Console API Reference (REST)",description:"For all requests include the access token for Cloud API into the Authorization headerBearer ${TOKEN} (see Cloud Console API Clients)",source:"@site/versioned_docs/version-0.25/reference/cloud-console-api/cloud-console-api-reference.md",sourceDirName:"reference/cloud-console-api",slug:"/reference/cloud-console-api/cloud-console-api-reference",permalink:"/docs/0.25/reference/cloud-console-api/cloud-console-api-reference",editUrl:"https://github.com/camunda-cloud/camunda-cloud-documentation/edit/master/versioned_docs/version-0.25/reference/cloud-console-api/cloud-console-api-reference.md",version:"0.25",frontMatter:{id:"cloud-console-api-reference",title:"Console API Reference (REST)"},sidebar:"version-0.25/Product Manuals",previous:{title:"Manage Client Connections",permalink:"/docs/0.25/product-manuals/cloud-console/manage-clusters/manage-client-connections"},next:{title:"Available Plans",permalink:"/docs/0.25/product-manuals/cloud-console/manage-plan/available-plans"}},i=[{value:"Clusters",id:"clusters",children:[{value:"GET all Clusters",id:"get-all-clusters",children:[]},{value:"Get Cluster",id:"get-cluster",children:[]},{value:"Get Cluster creation parameters",id:"get-cluster-creation-parameters",children:[]},{value:"Delete Cluster",id:"delete-cluster",children:[]},{value:"Create Cluster",id:"create-cluster",children:[]}]},{value:"Zeebe Clients",id:"zeebe-clients",children:[{value:"Get all Zeebe Clients",id:"get-all-zeebe-clients",children:[]},{value:"Get Zeebe Client Details",id:"get-zeebe-client-details",children:[]},{value:"Delete Zeebe Client",id:"delete-zeebe-client",children:[]},{value:"Create Zeebe Client",id:"create-zeebe-client",children:[]}]}],s={toc:i};function u(e){var t=e.components,n=(0,l.Z)(e,["components"]);return(0,a.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"For all requests include the access token for Cloud API into the Authorization header: ",(0,a.kt)("inlineCode",{parentName:"p"},"authorization:Bearer ${TOKEN}")," (see ",(0,a.kt)("a",{parentName:"p",href:"/docs/0.25/reference/cloud-console-api/cloud-console-api-clients"},"Cloud Console API Clients"),")"),(0,a.kt)("h2",{id:"clusters"},"Clusters"),(0,a.kt)("h3",{id:"get-all-clusters"},"GET all Clusters"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"GET https://api.cloud.camunda.io/clusters/"),"\nReturns detailed Data on all clusters of the Organization"),(0,a.kt)("h3",{id:"get-cluster"},"Get Cluster"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"GET https://api.cloud.camunda.io/clusters/${uuid}"),"\nReturns detailed Data of one cluster."),(0,a.kt)("h3",{id:"get-cluster-creation-parameters"},"Get Cluster creation parameters"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"GET https://api.cloud.camunda.io/clusters/parameters"),"\nReturns all options available to create a cluster."),(0,a.kt)("h3",{id:"delete-cluster"},"Delete Cluster"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"DELETE https://api.cloud.camunda.io/clusters/${uuid}")),(0,a.kt)("h3",{id:"create-cluster"},"Create Cluster"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"POST https://api.cloud.camunda.io/clusters/"),"\nWith following JSON payload:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": string, // Name of the Cluster\n  "channelId": string, // Software Channel for further upgrades, check Get creation parameters\n  "generationId": string, // Software Generation, check Get creation parameters\n  "regionId": string, // Region to host the cluster, check Get creation parameters\n  "planTypeId": string // Hardware Plan of the cluster, check Get creation parameters\n}\n')),(0,a.kt)("h2",{id:"zeebe-clients"},"Zeebe Clients"),(0,a.kt)("h3",{id:"get-all-zeebe-clients"},"Get all Zeebe Clients"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"GET https://api.cloud.camunda.io/clusters/${clusterUuid}/clients/"),"\nList all Zeebe Clients"),(0,a.kt)("h3",{id:"get-zeebe-client-details"},"Get Zeebe Client Details"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"GET https://api.cloud.camunda.io/clusters/${clusterUuid}/clients/${clientId}"),"\nReturns data needed to connect to a cluster"),(0,a.kt)("h3",{id:"delete-zeebe-client"},"Delete Zeebe Client"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"DELETE https://api.cloud.camunda.io/clusters/${clusterUuid}/clients/${clientId}"),"\nDelete a Zeebe Client"),(0,a.kt)("h3",{id:"create-zeebe-client"},"Create Zeebe Client"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"POST https://api.cloud.camunda.io/clusters/${clusterUuid}/clients/"),"\nWith following JSON payload:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "clientName": string // Name of the ZeebeClient\n}\n')),(0,a.kt)("p",null,"This returns:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": string,\n  "clientId": string,\n  "clientSecret": string\n}\n')),(0,a.kt)("p",null,"Be aware the ",(0,a.kt)("inlineCode",{parentName:"p"},"clientSecret")," is only returned on creation. ",(0,a.kt)("inlineCode",{parentName:"p"},"GET Client")," calls do not return the ",(0,a.kt)("inlineCode",{parentName:"p"},"clientSecret"),"."))}u.isMDXComponent=!0}}]);