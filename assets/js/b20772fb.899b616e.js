(self.webpackChunkcamunda_cloud_documentation=self.webpackChunkcamunda_cloud_documentation||[]).push([[55475],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return d},kt:function(){return u}});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=a.createContext({}),l=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=l(e.components);return a.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=l(n),u=i,h=m["".concat(p,".").concat(u)]||m[u]||c[u]||r;return n?a.createElement(h,o(o({ref:t},d),{},{components:n})):a.createElement(h,o({ref:t},d))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=m;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var l=2;l<r;l++)o[l]=n[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},61047:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return l},default:function(){return c}});var a=n(22122),i=n(19756),r=(n(67294),n(3905)),o={id:"schema-and-migration",title:"Schema and migration"},s=void 0,p={unversionedId:"components/operate/deployment/schema-and-migration",id:"components/operate/deployment/schema-and-migration",isDocsHomePage:!1,title:"Schema and migration",description:"Operate stores data in Elasticsearch. On first start, Operate creates all required indices and templates.",source:"@site/docs/components/operate/deployment/schema-and-migration.md",sourceDirName:"components/operate/deployment",slug:"/components/operate/deployment/schema-and-migration",permalink:"/docs/components/operate/deployment/schema-and-migration",editUrl:"https://github.com/camunda-cloud/camunda-cloud-documentation/edit/master/docs/components/operate/deployment/schema-and-migration.md",version:"current",frontMatter:{id:"schema-and-migration",title:"Schema and migration"},sidebar:"Components",previous:{title:"Data retention",permalink:"/docs/components/operate/deployment/data-retention"},next:{title:"Importer and archiver",permalink:"/docs/components/operate/deployment/importer-and-archiver"}},l=[{value:"Schema",id:"schema",children:[]},{value:"Data migration",id:"data-migration",children:[{value:"Concept",id:"concept",children:[]},{value:"How to migrate",id:"how-to-migrate",children:[]}]}],d={toc:l};function c(e){var t=e.components,n=(0,i.Z)(e,["components"]);return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Operate stores data in Elasticsearch. On first start, Operate creates all required indices and templates."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#schema"},"Schema")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#data-migration"},"Data migration")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#how-to-migrate"},"How to migrate")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#example-for-migrate-in-kubernetes"},"Example for migrate in Kubernetes"))),(0,r.kt)("h2",{id:"schema"},"Schema"),(0,r.kt)("p",null,"Operate uses several Elasticsearch indices that are mostly created using templates."),(0,r.kt)("p",null,"Each index has its own version of schema. This means the version reflected in the index name is ",(0,r.kt)("em",{parentName:"p"},"not")," the version of Operate."),(0,r.kt)("p",null,"Index names follow the defined pattern below:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"{operate-index-prefix}-{datatype}-{schemaversion}_[{date}]\n\n")),(0,r.kt)("p",null,"Here, ",(0,r.kt)("inlineCode",{parentName:"p"},"operate-index-prefix")," defines the prefix for index name (default ",(0,r.kt)("inlineCode",{parentName:"p"},"operate"),"), ",(0,r.kt)("inlineCode",{parentName:"p"},"datatype")," defines which data is stored in the index (e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"user"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"variable")," etc.,) ",(0,r.kt)("inlineCode",{parentName:"p"},"schemaversion")," represents the index schema version, and ",(0,r.kt)("inlineCode",{parentName:"p"},"date")," represents the finished date of the archived data. See ",(0,r.kt)("a",{parentName:"p",href:"/docs/components/operate/deployment/data-retention"},"Data retention"),"."),(0,r.kt)("p",null,"Knowing the index name pattern, it's possible to customize index settings by creating Elasticsearch templates. See an ",(0,r.kt)("a",{parentName:"p",href:"https://www.elastic.co/guide/en/elasticsearch/reference/6.8/indices-templates.html"},"example of an index template"),"."),(0,r.kt)("p",null,"To define the desired number of shards and replicas, define the following template:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'PUT _template/template_operate\n{\n  "index_patterns": ["operate-*"],\n  "settings": {\n    "number_of_shards": 5,\n    "number_of_replicas": 2\n  }\n}\n')),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"For these settings to work, the template must be created before Operate runs."))),(0,r.kt)("h2",{id:"data-migration"},"Data migration"),(0,r.kt)("p",null,"The version of Operate is reflected in Elasticsearch object names (e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"operate-user-1.0.0_")," index contains the user data for Operate 1.0.0.) When upgrading from one version of Operate to another, migration of data must be performed. Operate distribution provides an application to perform data migration from older versions."),(0,r.kt)("h3",{id:"concept"},"Concept"),(0,r.kt)("p",null,"The migration uses Elasticsearch ",(0,r.kt)("a",{parentName:"p",href:"https://www.elastic.co/guide/en/elasticsearch/reference/6.8/ingest-processors.html"},"processors")," and ",(0,r.kt)("a",{parentName:"p",href:"https://www.elastic.co/guide/en/elasticsearch/reference/6.8/pipeline.html"},"pipelines")," to reindex the data."),(0,r.kt)("p",null,"Each version of Operate delivers a set of migration steps which need to be applied for a corresponding version of Operate."),(0,r.kt)("p",null,"When upgrading from one version to another, necessary migration steps constitute the so-called migration plan.\nAll known migration steps (both applied and not) are persisted in the dedicated Elasticsearch index: ",(0,r.kt)("inlineCode",{parentName:"p"},"operate-migration-steps-repository"),"."),(0,r.kt)("h3",{id:"how-to-migrate"},"How to migrate"),(0,r.kt)("h4",{id:"migrate-by-using-standalone-application"},"Migrate by using standalone application"),(0,r.kt)("p",null,"Ensure Elasticsearch contains the data Operate is running. The migration script will connect to a specified connection in Operate configuration (",(0,r.kt)("inlineCode",{parentName:"p"},"<operate_home>/config/application.yml"),")."),(0,r.kt)("p",null,"Execute ",(0,r.kt)("inlineCode",{parentName:"p"},"<operate_home>/bin/migrate")," (or ",(0,r.kt)("inlineCode",{parentName:"p"},"<operate_home>/bin/migrate.bat")," for Windows)."),(0,r.kt)("p",null,"What is expected to happen:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"New Elasticsearch indices are created if they don't exist."),(0,r.kt)("li",{parentName:"ul"},"If an older version for some or all indices exists, the migration plan is built."),(0,r.kt)("li",{parentName:"ul"},"For each index with an older version, the migration plan is executed."),(0,r.kt)("li",{parentName:"ul"},"Older indices are deleted.")),(0,r.kt)("p",null,"All known migration steps with metadata are stored in the ",(0,r.kt)("inlineCode",{parentName:"p"},"operate-migration-steps-repository")," index."),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"The old indices are deleted ",(0,r.kt)("em",{parentName:"p"},"only")," after successful migration. This might require more disk space during the migration process."))),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Take care of data backup before performing migration."))),(0,r.kt)("h4",{id:"migrate-by-using-built-in-automatic-upgrade"},"Migrate by using built-in automatic upgrade"),(0,r.kt)("p",null,"When running a newer version of Operate against an older schema, it performs data migration on a startup.\nThe migration happens for every index, for which it detects exactly ",(0,r.kt)("strong",{parentName:"p"},"one")," older version. Migration fails if it detects more than one older version of some index. "),(0,r.kt)("h4",{id:"further-notes"},"Further notes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"If migration fails, you can retry it. All applied steps are stored and only those steps are applied that haven't been executed yet."),(0,r.kt)("li",{parentName:"ul"},"Operate should not be running while migration is happening."),(0,r.kt)("li",{parentName:"ul"},"In the case version upgrade is performed in the cluster with several Operate nodes, only one node (",(0,r.kt)("a",{parentName:"li",href:"/docs/components/operate/deployment/importer-and-archiver"},"Webapp module"),") must execute data migration. The others must be stopped and started only after migration is fully finished.")),(0,r.kt)("h4",{id:"configure-migration"},"Configure migration"),(0,r.kt)("p",null,"Automatic migration is enabled by default. It can be disabled by setting the configuration key:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"camunda.operate.migration.migrationEnabled = false")),(0,r.kt)("p",null,"The following migration settings may affect the duration of the migration process:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"You can set the batch size for reindex of the documents. This can reduce the time needed to reindex the data.\nSmall document size means big batch size, while big document size means small batch size.")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"camunda.operate.migration.reindexBatchSize = 5000")," (Between 1 and 10.000, Default: 5.000)"),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"In how many slices should the reindex be divided. For each shard used by the index, you normally use a slice.\nElasticsearch decides how many slices are used if the value is set to 0 (automatic).")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"camunda.operate.migration.slices = 0")," - Must be positive. Default is 0 (automatic). "),(0,r.kt)("h4",{id:"example-for-migration-in-kubernetes"},"Example for migration in Kubernetes"),(0,r.kt)("p",null,"To ensure the migration is executed ",(0,r.kt)("em",{parentName:"p"},"before")," Operate is started, use\nthe ",(0,r.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/workloads/pods/init-containers/"},"initContainer")," feature of Kubernetes. "),(0,r.kt)("p",null,'This ensures only the "main" container is started if the initContainer is successfully executed.'),(0,r.kt)("p",null,"The following snippet of a pod description for Kubernetes shows the usage of ",(0,r.kt)("inlineCode",{parentName:"p"},"migrate")," script as initContainers:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"...\n  labels:\n    app: operate\nspec:\n   initContainers:\n     - name: migration\n       image: camunda/operate:1.0.0\n       command: ['/bin/sh','/usr/local/operate/bin/migrate']\n   containers:\n     - name: operate\n       image: camunda/operate:1.0.0\n       env:\n...\n")))}c.isMDXComponent=!0}}]);