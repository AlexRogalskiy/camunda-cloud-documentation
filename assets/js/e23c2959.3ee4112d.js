(self.webpackChunkcamunda_cloud_documentation=self.webpackChunkcamunda_cloud_documentation||[]).push([[5105],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return m}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=s(n),m=r,f=p["".concat(c,".").concat(m)]||p[m]||d[m]||i;return n?a.createElement(f,o(o({ref:t},u),{},{components:n})):a.createElement(f,o({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=p;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},27641:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return s},default:function(){return d}});var a=n(22122),r=n(19756),i=(n(67294),n(3905)),o={id:"index",title:"Java client",sidebar_label:"Quick reference"},l=void 0,c={unversionedId:"product-manuals/clients/java-client/index",id:"product-manuals/clients/java-client/index",isDocsHomePage:!1,title:"Java client",description:"Dependencies",source:"@site/docs/product-manuals/clients/java-client/index.md",sourceDirName:"product-manuals/clients/java-client",slug:"/product-manuals/clients/java-client/index",permalink:"/docs/product-manuals/clients/java-client/index",editUrl:"https://github.com/camunda-cloud/camunda-cloud-documentation/edit/master/docs/product-manuals/clients/java-client/index.md",version:"current",frontMatter:{id:"index",title:"Java client",sidebar_label:"Quick reference"},sidebar:"Product Manuals",previous:{title:"Overview",permalink:"/docs/product-manuals/clients/overview"},next:{title:"Job worker",permalink:"/docs/product-manuals/clients/java-client/job-worker"}},s=[{value:"Dependencies",id:"dependencies",children:[]},{value:"Spring Integration",id:"spring-integration",children:[]},{value:"Bootstrapping",id:"bootstrapping",children:[]},{value:"Next steps",id:"next-steps",children:[]}],u={toc:s};function d(e){var t=e.components,n=(0,r.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"dependencies"},"Dependencies"),(0,i.kt)("p",null,"To use the Java client library, declare the following Maven dependency in your project:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},"<dependency>\n  <groupId>io.camunda</groupId>\n  <artifactId>zeebe-client-java</artifactId>\n  <version>${zeebe.version}</version>\n</dependency>\n")),(0,i.kt)("p",null,"If you are using Gradle, declare the following:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-groovy"},"implementation 'io.camunda:zeebe-client-java:${zeebe.version}'\n")),(0,i.kt)("p",null,"Use the latest released version from ",(0,i.kt)("a",{parentName:"p",href:"https://search.maven.org/artifact/io.camunda/zeebe-client-java"},"Maven Central"),"."),(0,i.kt)("h2",{id:"spring-integration"},"Spring Integration"),(0,i.kt)("p",null,"If you build a Spring or Spring Boot application, you might want to use ",(0,i.kt)("a",{parentName:"p",href:"../other-clients/spring"},"Spring Zeebe")," instead of handling the lifecycle and configuration of the Java client yourself (as described in the following paragraphs). "),(0,i.kt)("h2",{id:"bootstrapping"},"Bootstrapping"),(0,i.kt)("p",null,"In Java code, instantiate the client as follows:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'  private static final String zeebeAPI = "[Zeebe API]";\n  private static final String clientId = "[Client ID]";\n  private static final String clientSecret = "[Client Secret]";\n  private static final String oAuthAPI = "[OAuth API] ";\n\n  public static void main(String[] args) {\n    OAuthCredentialsProvider credentialsProvider =\n        new OAuthCredentialsProviderBuilder()\n            .authorizationServerUrl(oAuthAPI)\n            .audience(zeebeAPI)\n            .clientId(clientId)\n            .clientSecret(clientSecret)\n            .build();\n\n    ZeebeClient client =\n        ZeebeClient.newClientBuilder()\n            .gatewayAddress(zeebeAPI)\n            .credentialsProvider(credentialsProvider)\n            .build();\n\n    client.newTopologyRequest().send().join();\n  }\n')),(0,i.kt)("p",null,"Let's go over this code snippet line by line:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Declare a few variables to define the connection properties. These values can be taken from the connection information on the ",(0,i.kt)("strong",{parentName:"li"},"Client Credentials")," page. Note that ",(0,i.kt)("inlineCode",{parentName:"li"},"clientSecret")," is only visible when you create the client credentials."),(0,i.kt)("li",{parentName:"ol"},"Create the credentials provider for the OAuth protocol. This is needed to authenticate your client."),(0,i.kt)("li",{parentName:"ol"},"Create the client by passing in the address of the cluster we want to connect to and the credentials provider from the step above."),(0,i.kt)("li",{parentName:"ol"},"Send a test request to verify the connection was established.")),(0,i.kt)("p",null,"See ",(0,i.kt)("a",{parentName:"p",href:"https://javadoc.io/doc/io.zeebe/zeebe-client-java/latest/io/zeebe/client/ZeebeClientBuilder.html"},"io.camunda.zeebe.client.ZeebeClientBuilder")," for a description of all available configuration properties."),(0,i.kt)("p",null,"Another (more compact) option is to pass in the connection settings via environment variables:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"export ZEEBE_ADDRESS='[Zeebe API]'\nexport ZEEBE_CLIENT_ID='[Client ID]'\nexport ZEEBE_CLIENT_SECRET='[Client Secret]'\nexport ZEEBE_AUTHORIZATION_SERVER_URL='[OAuth API]'\n")),(0,i.kt)("p",null,"When you create client credentials in Camunda Cloud, you have the option to download a file with the lines above filled out for you."),(0,i.kt)("p",null,"Given these environment variables, you can instantiate the client as follows:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'ZeebeClient client =\n    ZeebeClient.newClientBuilder()\n        .gatewayAddress(System.getenv("ZEEBE_ADDRESS"))\n        .build();\n')),(0,i.kt)("h2",{id:"next-steps"},"Next steps"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/camunda-cloud/camunda-cloud-get-started"},"Getting Started Guide"),": A comprehensive tutorial that covers Camunda Modeler, Operate, and the Java client.")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/product-manuals/clients/java-client/job-worker"},"Job worker"),": An introduction to the Java client's job worker."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/product-manuals/clients/java-client/logging"},"Logging"),": An introduction to configuring logging for a Zeebe client."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/product-manuals/clients/java-client/testing"},"Writing tests"),": An introduction to writing tests that use an embedded version of the workflow engine."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/product-manuals/clients/java-client-examples/index"},"Examples"),": A collection of specific examples for different use cases.")))}d.isMDXComponent=!0}}]);