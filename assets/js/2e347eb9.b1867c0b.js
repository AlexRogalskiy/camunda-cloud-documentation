(self.webpackChunkcamunda_cloud_documentation=self.webpackChunkcamunda_cloud_documentation||[]).push([[70173],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return u},kt:function(){return f}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(r),f=a,m=d["".concat(c,".").concat(f)]||d[f]||p[f]||o;return r?n.createElement(m,i(i({ref:t},u),{},{components:r})):n.createElement(m,i({ref:t},u))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},31047:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return i},metadata:function(){return l},toc:function(){return c},default:function(){return u}});var n=r(22122),a=r(19756),o=(r(67294),r(3905)),i={id:"job-worker",title:"Job worker"},l={unversionedId:"product-manuals/clients/java-client/job-worker",id:"product-manuals/clients/java-client/job-worker",isDocsHomePage:!1,title:"Job worker",description:"Related resources",source:"@site/docs/product-manuals/clients/java-client/job-worker.md",sourceDirName:"product-manuals/clients/java-client",slug:"/product-manuals/clients/java-client/job-worker",permalink:"/docs/product-manuals/clients/java-client/job-worker",editUrl:"https://github.com/camunda-cloud/camunda-cloud-documentation/edit/master/docs/product-manuals/clients/java-client/job-worker.md",version:"current",frontMatter:{id:"job-worker",title:"Job worker"},sidebar:"Product Manuals",previous:{title:"Java client",permalink:"/docs/product-manuals/clients/java-client/index"},next:{title:"Logging",permalink:"/docs/product-manuals/clients/java-client/logging"}},c=[{value:"Related resources",id:"related-resources",children:[]},{value:"The Java client&#39;s job worker",id:"the-java-clients-job-worker",children:[]},{value:"Example usage",id:"example-usage",children:[]},{value:"Backoff configuration",id:"backoff-configuration",children:[]}],s={toc:c};function u(e){var t=e.components,r=(0,a.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"related-resources"},"Related resources"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/product-manuals/concepts/job-workers"},"Job worker basics"))),(0,o.kt)("h2",{id:"the-java-clients-job-worker"},"The Java client's job worker"),(0,o.kt)("p",null,"The Java client provides a job worker that takes care of polling for available jobs and allows you to focus on writing code to handle the activated jobs."),(0,o.kt)("p",null,"On ",(0,o.kt)("inlineCode",{parentName:"p"},"open")," the job worker waits ",(0,o.kt)("inlineCode",{parentName:"p"},"pollInterval")," milliseconds and then polls for ",(0,o.kt)("inlineCode",{parentName:"p"},"maxJobsActive")," jobs.\nIt then continues with the following schedule:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"when a poll did not activate any jobs, it waits for ",(0,o.kt)("inlineCode",{parentName:"li"},"pollInterval")," milliseconds and then polls for more jobs."),(0,o.kt)("li",{parentName:"ul"},"when a poll activated jobs, the worker submits each job to the job handler.\nEvery time a job is handled, the worker checks whether the number of unhandled jobs have dropped below 30% of ",(0,o.kt)("inlineCode",{parentName:"li"},"maxJobsActive"),".\nThe first time that happens, it will poll for more jobs."),(0,o.kt)("li",{parentName:"ul"},"when a poll fails with an error response, a backoff strategy is applied.\nIt waits for the delay provided by the ",(0,o.kt)("inlineCode",{parentName:"li"},"backoffSupplier")," and then polls for more jobs.")),(0,o.kt)("h2",{id:"example-usage"},"Example usage"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/product-manuals/clients/java-client-examples/job-worker-open"},"Open a job worker"))),(0,o.kt)("h2",{id:"backoff-configuration"},"Backoff configuration"),(0,o.kt)("p",null,"When a poll fails with an error response, the job worker applies a backoff strategy.\nIt waits for some time, after which it polls again for more jobs.\nThis gives a Zeebe cluster some time to recover from a failure.\nIn some cases, you may want to configure this backoff strategy to better fit your situation."),(0,o.kt)("p",null,"The retry delay (i.e. the time the job worker waits after an error before the next poll for new jobs) is provided by the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/camunda-cloud/zeebe/blob/develop/clients/java/src/main/java/io/camunda/zeebe/client/api/worker/BackoffSupplier.java"},(0,o.kt)("inlineCode",{parentName:"a"},"BackoffSupplier")),".\nYou can replace it using the ",(0,o.kt)("inlineCode",{parentName:"p"},".backoffSupplier()")," method on the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/camunda-cloud/zeebe/blob/develop/clients/java/src/main/java/io/camunda/zeebe/client/api/worker/JobWorkerBuilderStep1.java"},(0,o.kt)("inlineCode",{parentName:"a"},"JobWorkerBuilder")),".\nBy default, the job worker uses an exponential backoff implementation, which can you can configure using ",(0,o.kt)("inlineCode",{parentName:"p"},"BackoffSupplier.newBackoffBuilder()"),"."),(0,o.kt)("p",null,"The backoff strategy is especially useful for dealing with the ",(0,o.kt)("inlineCode",{parentName:"p"},"GRPC_STATUS_RESOURCE_EXHAUSTED")," error response (see ",(0,o.kt)("a",{parentName:"p",href:"../../../reference/grpc#technical-error-handling"},"gRPC Technical Error Handling"),").\nThis error code indicates the Zeebe cluster is currently under too much load and has decided to reject this request.\nBy backing off, the job worker helps Zeebe by reducing the load.\nNote, that Zeebe's ",(0,o.kt)("a",{parentName:"p",href:"../../zeebe/deployment-guide/operations/backpressure"},"backpressure mechanism")," can also be configured."))}u.isMDXComponent=!0}}]);