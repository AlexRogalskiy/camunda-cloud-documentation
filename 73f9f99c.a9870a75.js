(window.webpackJsonp=window.webpackJsonp||[]).push([[176],{248:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return i})),n.d(t,"default",(function(){return b}));var a=n(3),r=n(7),c=(n(0),n(454)),l={id:"get-started",title:"CLI client - Getting started guide",sidebar_label:"Getting started guide"},o={unversionedId:"product-manuals/clients/cli-client/get-started",id:"product-manuals/clients/cli-client/get-started",isDocsHomePage:!1,title:"CLI client - Getting started guide",description:"In this tutorial, you will learn to use the CLI client zbctl to interact with Camunda Cloud.",source:"@site/docs/product-manuals/clients/cli-client/get-started.md",slug:"/product-manuals/clients/cli-client/get-started",permalink:"/docs/product-manuals/clients/cli-client/get-started",editUrl:"https://github.com/camunda-cloud/camunda-cloud-documentation/edit/master/docs/product-manuals/clients/cli-client/get-started.md",version:"current",sidebar_label:"Getting started guide",sidebar:"Product Manuals",previous:{title:"CLI client",permalink:"/docs/product-manuals/clients/cli-client/index"},next:{title:"Overview",permalink:"/docs/product-manuals/clients/other-clients/index"}},i=[{value:"Prerequisites",id:"prerequisites",children:[]},{value:"Set up",id:"set-up",children:[{value:"Installation",id:"installation",children:[]},{value:"Connection settings",id:"connection-settings",children:[]},{value:"Test command",id:"test-command",children:[]}]},{value:"Advanced workflow",id:"advanced-workflow",children:[]},{value:"Deploy a Workflow",id:"deploy-a-workflow",children:[]},{value:"Register a worker",id:"register-a-worker",children:[]},{value:"Start a new instance",id:"start-a-new-instance",children:[]}],s={rightToc:i};function b(e){var t=e.components,l=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(a.a)({},s,l,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"In this tutorial, you will learn to use the CLI client ",Object(c.b)("inlineCode",{parentName:"p"},"zbctl")," to interact with Camunda Cloud."),Object(c.b)("h2",{id:"prerequisites"},"Prerequisites"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/guides/getting-started/create-camunda-cloud-account"}),"Camunda Cloud account")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/guides/getting-started/create-cluster"}),"Cluster")," and ",Object(c.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/guides/getting-started/setup-client-connection-credentials"}),"client credentials")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/guides/getting-started/model-your-first-process"}),"Modeler")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(a.a)({parentName:"li"},{href:"https://www.npmjs.com/"}),"NPM environment"))),Object(c.b)("h2",{id:"set-up"},"Set up"),Object(c.b)("h3",{id:"installation"},"Installation"),Object(c.b)("p",null,"An installation can be done quickly via the package manager ",Object(c.b)("inlineCode",{parentName:"p"},"npm"),". The corresponding package is ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.npmjs.com/package/zbctl"}),"here"),"."),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"npm i -g zbctl\n")),Object(c.b)("p",null,"You can also download a binary for your Operating System from the ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/zeebe-io/zeebe/releases"}),"Zeebe GitHub releases page"),"."),Object(c.b)("h3",{id:"connection-settings"},"Connection settings"),Object(c.b)("p",null,"To use ",Object(c.b)("inlineCode",{parentName:"p"},"zbctl")," it is recommended to define environment variables for the connection settings:"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"export ZEEBE_ADDRESS='[Zeebe API]'\nexport ZEEBE_CLIENT_ID='[Client ID]'\nexport ZEEBE_CLIENT_SECRET='[Client Secret]'\nexport ZEEBE_AUTHORIZATION_SERVER_URL='[OAuth API]'\n")),Object(c.b)("p",null,"When you create client credentials in Camunda Cloud you have the option to download a file with above lines filled out for you."),Object(c.b)("p",null,"Alternatively, use the ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.npmjs.com/package/zbctl#usage"}),"described flags")," (",Object(c.b)("inlineCode",{parentName:"p"},"--address"),", ",Object(c.b)("inlineCode",{parentName:"p"},"--clientId")," and ",Object(c.b)("inlineCode",{parentName:"p"},"--clientSecret"),"). with the zbctl commands."),Object(c.b)("h3",{id:"test-command"},"Test command"),Object(c.b)("p",null,"Use this command to verify that everything is set up correctly:"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"zbctl status\n")),Object(c.b)("p",null,"As a result you will get a similar response:"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"Cluster size: 1\nPartitions count: 2\nReplication factor: 1\nGateway version: unavailable\nBrokers:\n  Broker 0 - zeebe-0.zeebe-broker-service.456637ef-8832-428b-a2a4-82b531b25635-zeebe.svc.cluster.local:26501\n    Version: unavailable\n    Partition 1 : Leader\n    Partition 2 : Leader\n")),Object(c.b)("h2",{id:"advanced-workflow"},"Advanced workflow"),Object(c.b)("p",null,"Use ",Object(c.b)("a",{target:"_blank",href:n(534).default},"this workflow model")," for the tutorial."),Object(c.b)("p",null,Object(c.b)("img",{alt:"processId",src:n(725).default})),Object(c.b)("p",null,"This workflow includes a service task and an XOR gateway. Select the service task and fill in the properties. Set the ",Object(c.b)("strong",{parentName:"p"},"Type")," to ",Object(c.b)("inlineCode",{parentName:"p"},"test-worker"),"."),Object(c.b)("p",null,Object(c.b)("img",{alt:"workflow",src:n(726).default})),Object(c.b)("p",null,"The worker will return a JSON object as a result, which is used to decide which path to take.\nNow, we can use the JSON object to route your process by filling in the condition expression on the two sequence flows after the XOR gateway."),Object(c.b)("p",null,'Use the following conditional expression for the "Pong" sequence flow:'),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),'=return="Pong"\n')),Object(c.b)("p",null,"And for the else sequence flow:"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),'=return!="Pong"\n')),Object(c.b)("p",null,Object(c.b)("img",{alt:"sequenceflows",src:n(727).default})),Object(c.b)("h2",{id:"deploy-a-workflow"},"Deploy a Workflow"),Object(c.b)("p",null,"Now you can deploy the ",Object(c.b)("a",{target:"_blank",href:n(534).default},"workflow"),". Navigate to the folder, where you saved your workflow."),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"zbctl deploy gettingstarted_quickstart_advanced.bpmn\n")),Object(c.b)("p",null,"If the deployment is successful you'll get the following output:"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),'{\n  "key": 2251799813685493,\n  "workflows": [\n    {\n      "bpmnProcessId": "camunda-cloud-quick-start-advanced",\n      "version": 1,\n      "workflowKey": 2251799813685492,\n      "resourceName": "gettingstarted_quickstart_advanced.bpmn"\n    }\n  ]\n}\n')),Object(c.b)("p",null,"Important here is the ",Object(c.b)("inlineCode",{parentName:"p"},"bpmnProcessId"),", which you'll need for creating a new instance."),Object(c.b)("h2",{id:"register-a-worker"},"Register a worker"),Object(c.b)("p",null,"The workflow uses the worker with the type ",Object(c.b)("inlineCode",{parentName:"p"},"test-worker"),". Register a new one by using the following command:"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),'zbctl create worker test-worker --handler "echo {\\"return\\":\\"Pong\\"}"\n')),Object(c.b)("h2",{id:"start-a-new-instance"},"Start a new instance"),Object(c.b)("p",null,"You can start a new instance with a single command:"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"zbctl create instance camunda-cloud-quick-start-advanced\n")),Object(c.b)("p",null,"As a result, you'll get the following output, which contains, among others, the ",Object(c.b)("inlineCode",{parentName:"p"},"workflowInstanceKey"),":"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),'{\n  "workflowKey": 2251799813685492,\n  "bpmnProcessId": "camunda-cloud-quick-start-advanced",\n  "version": 1,\n  "workflowInstanceKey": 2251799813685560\n}\n')),Object(c.b)("p",null,"Navigate to Operate to monitor the workflow instance."),Object(c.b)("p",null,Object(c.b)("img",{alt:"operate-instances",src:n(728).default})),Object(c.b)("p",null,"Because the worker returns"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "return": "Pong"\n}\n')),Object(c.b)("p",null,"the workflow ends in the upper end event following the Ping sequence flow."),Object(c.b)("p",null,"Changing the worker to"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),'zbctl create worker test-worker --handler "echo {\\"return\\":\\"...\\"}"\n')),Object(c.b)("p",null,"and creating a new instance leads to a second instance in Operate, which you'll see ending in the second end event following the else sequence flow:"),Object(c.b)("p",null,Object(c.b)("img",{alt:"operate-instance",src:n(729).default})),Object(c.b)("p",null,"As a next step you can now connect both workers in parallel and create more workflow instances:"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"while true; do zbctl create instance camunda-cloud-quick-start-advanced; sleep 1; done\n")),Object(c.b)("p",null,"In Operate you will see instances ending in both end events depending on which worker picked up the job."),Object(c.b)("p",null,Object(c.b)("img",{alt:"operate-instances",src:n(730).default})))}b.isMDXComponent=!0},454:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},c=Object.keys(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),b=function(e){var t=r.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=b(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},p=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,c=e.originalType,l=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),u=b(n),p=a,m=u["".concat(l,".").concat(p)]||u[p]||d[p]||c;return n?r.a.createElement(m,o(o({ref:t},s),{},{components:n})):r.a.createElement(m,o({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=n.length,l=new Array(c);l[0]=p;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var s=2;s<c;s++)l[s]=n[s];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},534:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/files/gettingstarted_quickstart_advanced-646d264a8a9461758b6da49526d2f48b.bpmn"},725:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/zeebe-modeler-advanced-process-id-ba87c7843ffe2e1b32fface4519e29d0.png"},726:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/zeebe-modeler-advanced-58ba09349350703a2a0812ef2694129c.png"},727:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/zeebe-modeler-advanced-sequence-flows-ffa8ac92ad7688530538507901c6fc5f.png"},728:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/operate-advanced-instances-pong-8000ccad818303c9f1213cb4bf7c09b9.png"},729:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/operate-advanced-instances-other-256b79b61a5c9090674d8b789eea0e41.png"},730:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/operate-advanced-instances-cbb3fceba883216bbbde22333a23eeb9.png"}}]);